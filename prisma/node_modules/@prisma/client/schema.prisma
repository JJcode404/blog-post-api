// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  files     File[]
  folders   Folder[] // A user can have multiple folders
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Folder {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  name      String
  files     File[] // A folder can have multiple files
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model File {
  id         String   @id @default(uuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  folderId   String? // Folder can be null, meaning no folder assigned
  folder     Folder?  @relation(fields: [folderId], references: [id], onDelete: SetNull)
  fileName   String
  filePath   String
  fileType   String
  fileSize   Int
  uploadedAt DateTime @default(now())
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}
