// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String       @id @default(uuid())
  name      String
  email     String       @unique
  password  String
  role      Role         @default(USER)
  posts     Post[]       @relation("AuthorPosts")
  comments  Comment[]
  profile   UserProfile?
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model UserProfile {
  id        String  @id @default(uuid())
  bio       String?
  avatarUrl String?
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @unique
}

model Post {
  id        String    @id @default(uuid())
  title     String
  content   String
  thumbnail String?
  published Boolean   @default(false)
  author    User      @relation("AuthorPosts", fields: [authorId], references: [id])
  authorId  String
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  username  String?
  email     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}
